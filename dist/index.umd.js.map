{"version":3,"file":"index.umd.js","sources":["../src/common/Ascii.js","../src/piece/SvgBlackArchbishop.js","../src/piece/SvgBlackBishop.js","../src/piece/SvgBlackChancellor.js","../src/piece/SvgBlackKing.js","../src/piece/SvgBlackKnight.js","../src/piece/SvgBlackPawn.js","../src/piece/SvgBlackQueen.js","../src/piece/SvgBlackRook.js","../src/piece/SvgWhiteArchbishop.js","../src/piece/SvgWhiteBishop.js","../src/piece/SvgWhiteChancellor.js","../src/piece/SvgWhiteKing.js","../src/piece/SvgWhiteKnight.js","../src/piece/SvgWhitePawn.js","../src/piece/SvgWhiteQueen.js","../src/piece/SvgWhiteRook.js","../src/piece/SvgPiece.js","../src/styles.js","../src/AlgebraicNotation.js","../src/Squares.js","../src/CapablancaSquares.js","../src/ClassicalSquares.js","../src/index.js"],"sourcesContent":["export class Ascii {\n  static initialFen = () => {\n    return 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq -';\n  }\n\n  static toFen = (ascii) => {\n    let string = '';\n    ascii.forEach((rank, i) => {\n      string += rank.join('').replace(/\\s/g, '');\n      string += '/';\n    });\n    string = string.slice(0, -1);\n    let filtered = '';\n    let strSplit = string.split('');\n    let n = 1;\n    strSplit.forEach((item, i) => {\n      if (strSplit[i] === '.') {\n        if (strSplit[i+1] === '.') {\n          n++;\n        } else {\n          filtered += n;\n          n = 1;\n        }\n      } else {\n        filtered += strSplit[i];\n        n = 1;\n      }\n    });\n\n    return filtered;\n  }\n\n  static flip = (color, ascii) => {\n    if (color === 'b') {\n      let flipped = ascii.map(rank => new Array(rank.length));\n      const nFiles = ascii[0].length;\n      const nRanks = ascii.length;\n      ascii.forEach((rank, i) => {\n        rank.forEach((file, j) => {\n          let k = nRanks - 1 - i;\n          let l = nFiles - (j + 1);\n          flipped[i][j] = ascii[k][l];\n        });\n      });\n      return flipped;\n    }\n\n    return ascii;\n  }\n\n  static toAscii = (fen) => {\n    let arr = fen.split('/').map(rank => {\n      let row = [];\n      let digits = [...rank.matchAll(/[0-9]+/g)].map(item => [item.index, parseInt(item[0])]);\n      let letters = [...rank.matchAll(/[a-zA-Z]{1}/g)].map(item => [item.index, item[0]]);\n      [...digits, ...letters]\n        .sort((a, b) =>  a[0] - b[0])\n        .forEach(item => {\n          let elem;\n          typeof item[1] === 'number'\n            ? elem = Array(item[1]).fill(' . ')\n            : elem = [` ${item[1]} `];\n          row = [...row, ...elem];\n        });\n      return row;\n    });\n\n    return arr;\n  }\n\n  static fromIndexToAlgebraic = (i, j, size) => {\n    const file = String.fromCharCode(97 + j);\n    const rank = size.ranks - i;\n\n    return file + rank;\n  }\n\n  static fromAlgebraicToIndex = (sq, size) => {\n    const i = size.ranks - sq.charAt(1);\n    const j = sq.charAt(0).charCodeAt(0) - 97;\n\n    return [i, j];\n  }\n\n  static asciiDiff = (a, b) => {\n    let sqs = [];\n    a.forEach((rank, i) => {\n      rank.forEach((file, j) => {\n        if (a[i][j] !== b[i][j]) {\n          sqs.push({\n            from: a[i][j],\n            to: b[i][j],\n            sq: Ascii.fromIndexToAlgebraic(\n              i,\n              j,\n              {\n                files: a.length,\n                ranks: rank.length\n              }\n            )\n          });\n        }\n      });\n    });\n\n    return sqs;\n  }\n\n  static sqDiff = (a, b) => {\n    let diff = {\n      files: Math.abs(a.charCodeAt(0) - b.charCodeAt(0)),\n      ranks: Math.abs(a.charCodeAt(1) - b.charCodeAt(1))\n    };\n\n    return diff;\n  }\n\n  static xAxisSign = (a, b, color, flip) => {\n    const sign =  Math.sign(a.charCodeAt(0) - b.charCodeAt(0));\n    if (color === 'w') {\n      if (flip === 'w') {\n        return -sign;\n      } else {\n        return sign;\n      }\n    } else {\n      if (flip === 'w') {\n        return -sign;\n      } else {\n        return sign;\n      }\n    }\n  }\n\n  static yAxisSign = (a, b, color, flip) => {\n    const sign =  Math.sign(a.charCodeAt(1) - b.charCodeAt(1));\n    if (color === 'w') {\n      if (flip === 'w') {\n        return sign;\n      } else {\n        return -sign;\n      }\n    } else {\n      if (flip === 'w') {\n        return sign;\n      } else {\n        return -sign;\n      }\n    }\n  }\n\n  static longAlgebraicNotation = (a, b) => {\n    const diff = Ascii.asciiDiff(a, b);\n    let sorted = [];\n    let from = diff.find(item => item.from === ' K ' || item.from === ' k ');\n    let to = diff.find(item => item.to === ' K ' || item.to === ' k ');\n    if (from && to) { // castling\n      sorted.push(from.sq);\n      sorted.push(to.sq);\n    } else if (diff.length === 3) { // en passant\n      from = diff.find(item => item.from === ' P ' || item.from === ' p ');\n      to = diff.find(item => item.to === ' P ' || item.to === ' p ');\n      sorted.push(from.sq);\n      sorted.push(to.sq);\n    } else if (diff[0].to === ' . ') {\n      sorted.push(diff[0].sq);\n      sorted.push(diff[1].sq);\n    } else {\n      sorted.push(diff[1].sq);\n      sorted.push(diff[0].sq);\n    }\n\n    return sorted;\n  }\n}\n","const SvgBlackArchbishop = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      stroke=\"#000\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M36 36c-3.385-.972-10.115.43-13.5-2-3.385 2.43-10.115 1.028-13.5 2 0 0-1.646.542-3 2 .677.972 1.646.986 3 .5 3.385-.972 10.115.458 13.5-1 3.385 1.458 10.115.028 13.5 1 1.354.486 2.323.472 3-.5-1.354-1.945-3-2-3-2z\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      stroke=\"#000\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M30 32c-2.5 2.5-12.5 2.5-15 0-.5-1.5 0-2 0-2h15s.5.5 0 2z\"\n    />\n    <path fill=\"none\" stroke=\"#000\" strokeWidth={1.5} d=\"M30 30H15\" />\n    <g\n      strokeLinecap=\"round\"\n      style={{\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        fillRule=\"evenodd\"\n        stroke=\"#000\"\n        strokeWidth={1.14813}\n        d=\"M20.345 7.627c8.036.765 12.629 6.123 12.246 22.197H14.987c0-6.889 7.654-4.975 6.123-16.074\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        stroke=\"#000\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.14813}\n        d=\"M21.875 13.75c.295 2.229-4.25 5.64-6.123 6.889-2.296 1.53-2.158 3.324-3.827 3.062-.797-.723 1.082-2.325 0-2.297-.765 0 .143.943-.765 1.531-.766 0-3.065.766-3.062-3.061 0-1.531 4.592-9.185 4.592-9.185s1.444-1.456 1.531-2.68c-.556-.76-.383-1.53-.383-2.296.766-.765 2.297 1.914 2.297 1.914h1.53s.599-1.525 1.914-2.296c.766 0 .766 2.296.766 2.296\"\n      />\n      <path\n        stroke=\"#fff\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.14813}\n        d=\"M10.777 19.49a.383.383 0 1 1-.766 0 .383.383 0 1 1 .766 0zM14.936 12.028a.383 1.148 30 1 1-.663-.382.383 1.148 30 1 1 .663.382z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        stroke=\"#fff\"\n        strokeWidth={0.76542}\n        d=\"M31.826 29.824c.765-15.308-4.21-21.049-9.185-21.814\"\n      />\n    </g>\n    <path\n      stroke=\"#fff\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M15 30h15\"\n    />\n  </svg>\n);\n\nexport default SvgBlackArchbishop;\n","const SvgBlackBishop = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"none\",\n        fillRule: \"evenodd\",\n        fillOpacity: 1,\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <g\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n          strokeLinecap: \"butt\",\n        }}\n      >\n        <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\n        <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\n        <path d=\"M25 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 1 1 5 0z\" />\n      </g>\n      <path\n        d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\n        style={{\n          fill: \"none\",\n          stroke: \"#fff\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgBlackBishop;\n","const SvgBlackChancellor = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <path\n      fillRule=\"evenodd\"\n      stroke=\"#000\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"m34 34.82-3-3H14l-3 3\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      stroke=\"#000\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n      d=\"M11 34.82v5h4v-2h5v2h5v-2h5v2h4v-5\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      stroke=\"#000\"\n      strokeWidth={1.5}\n      d=\"M31.553 32.109v-2.115H13.448v2.115\"\n    />\n    <path fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" d=\"M11 34.82h23\" />\n    <g\n      strokeLinecap=\"round\"\n      style={{\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        fillRule=\"evenodd\"\n        stroke=\"#000\"\n        strokeWidth={1.14813}\n        d=\"M20.345 7.627c8.036.765 12.629 6.123 12.246 22.197H14.987c0-6.889 7.654-4.975 6.123-16.074\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        stroke=\"#000\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.14813}\n        d=\"M21.875 13.75c.295 2.229-4.25 5.64-6.123 6.889-2.296 1.53-2.158 3.324-3.827 3.062-.797-.723 1.082-2.325 0-2.297-.765 0 .143.943-.765 1.531-.766 0-3.065.766-3.062-3.061 0-1.531 4.592-9.185 4.592-9.185s1.444-1.456 1.531-2.68c-.556-.76-.383-1.53-.383-2.296.766-.765 2.297 1.914 2.297 1.914h1.53s.599-1.525 1.914-2.296c.766 0 .766 2.296.766 2.296\"\n      />\n      <path\n        stroke=\"#fff\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.14813}\n        d=\"M10.777 19.49a.383.383 0 1 1-.766 0 .383.383 0 1 1 .766 0zM14.936 12.028a.383 1.148 30 1 1-.663-.382.383 1.148 30 1 1 .663.382z\"\n      />\n      <path\n        fill=\"none\"\n        stroke=\"#fff\"\n        strokeWidth={0.76542}\n        d=\"M31.826 29.824c.765-15.308-4.21-21.049-9.185-21.814\"\n      />\n    </g>\n    <path fill=\"none\" stroke=\"#fff\" strokeWidth={1.5} d=\"M30 30H15\" />\n  </svg>\n);\n\nexport default SvgBlackChancellor;\n","const SvgBlackKing = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        fill: \"none\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M22.5 11.63V6\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\n        style={{\n          fill: \"#000\",\n          fillOpacity: 1,\n          strokeLinecap: \"butt\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M20 8h5\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M32 29.5s8.5-4 6.03-9.65C34.15 14 25 18 22.5 24.5v2.1-2.1C20 18 10.85 14 6.97 19.85 4.5 25.5 13 29.5 13 29.5\"\n        style={{\n          fill: \"none\",\n          stroke: \"#fff\",\n        }}\n      />\n      <path\n        d=\"M12.5 30c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0m-20 3.5c5.5-3 14.5-3 20 0\"\n        style={{\n          fill: \"none\",\n          stroke: \"#fff\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgBlackKing;\n","const SvgBlackKnight = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"none\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\"\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M9.5 25.5a.5.5 0 1 1-1 0 .5.5 0 1 1 1 0z\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#fff\",\n        }}\n      />\n      <path\n        d=\"M15 15.5a.5 1.5 0 1 1-1 0 .5 1.5 0 1 1 1 0z\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#fff\",\n        }}\n        transform=\"rotate(30 14.5 15.5)\"\n      />\n      <path\n        stroke=\"none\"\n        d=\"m24.55 10.4-.45 1.45.5.15c3.15 1 5.65 2.49 7.9 6.75S35.75 29.06 35.25 39l-.05.5h2.25l.05-.5c.5-10.06-.88-16.85-3.25-21.34-2.37-4.49-5.79-6.64-9.19-7.16l-.51-.1z\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"none\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgBlackKnight;\n","const SvgBlackPawn = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <path\n      d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\n      style={{\n        opacity: 1,\n        fill: \"#000\",\n        fillOpacity: 1,\n        fillRule: \"nonzero\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"miter\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    />\n  </svg>\n);\n\nexport default SvgBlackPawn;\n","const SvgBlackQueen = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        fill: \"#000\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\"\n        style={{\n          strokeLinecap: \"butt\",\n          fill: \"#000\",\n        }}\n      />\n      <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\n      <path d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\" />\n      <circle cx={6} cy={12} r={2} />\n      <circle cx={14} cy={9} r={2} />\n      <circle cx={22.5} cy={8} r={2} />\n      <circle cx={31} cy={9} r={2} />\n      <circle cx={39} cy={12} r={2} />\n      <path\n        d=\"M11 38.5a35 35 1 0 0 23 0\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinecap: \"butt\",\n        }}\n      />\n      <g\n        style={{\n          fill: \"none\",\n          stroke: \"#fff\",\n        }}\n      >\n        <path d=\"M11 29a35 35 1 0 1 23 0M12.5 31.5h20M11.5 34.5a35 35 1 0 0 22 0M10.5 37.5a35 35 1 0 0 24 0\" />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default SvgBlackQueen;\n","const SvgBlackRook = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"#000\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M9 39h27v-3H9v3zM12.5 32l1.5-2.5h17l1.5 2.5h-20zM12 36v-4h21v4H12z\"\n        style={{\n          strokeLinecap: \"butt\",\n        }}\n      />\n      <path\n        d=\"M14 29.5v-13h17v13H14z\"\n        style={{\n          strokeLinecap: \"butt\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M14 16.5 11 14h23l-3 2.5H14zM11 14V9h4v2h5V9h5v2h5V9h4v5H11z\"\n        style={{\n          strokeLinecap: \"butt\",\n        }}\n      />\n      <path\n        d=\"M12 35.5h21M13 31.5h19M14 29.5h17M14 16.5h17M11 14h23\"\n        style={{\n          fill: \"none\",\n          stroke: \"#fff\",\n          strokeWidth: 1,\n          strokeLinejoin: \"miter\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgBlackRook;\n","const SvgWhiteArchbishop = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      stroke=\"#000\"\n      style={{\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n        d=\"M36 36c-3.385-.972-10.115.43-13.5-2-3.385 2.43-10.115 1.028-13.5 2 0 0-1.646.542-3 2 .677.972 1.646.986 3 .5 3.385-.972 10.115.458 13.5-1 3.385 1.458 10.115.028 13.5 1 1.354.486 2.323.472 3-.5-1.354-1.945-3-2-3-2z\"\n      />\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n        d=\"M30 32c-2.5 2.5-12.5 2.5-15 0-.5-1.5 0-2 0-2h15s.5.5 0 2z\"\n      />\n      <path fill=\"none\" strokeWidth={1.5} d=\"M30 30H15\" />\n      <g strokeLinecap=\"round\">\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          strokeWidth={1.14813}\n          d=\"M20.345 7.627c8.036.765 12.629 6.123 12.246 22.197H14.987c0-6.889 7.654-4.975 6.123-16.074\"\n        />\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          strokeLinejoin=\"round\"\n          strokeWidth={1.14813}\n          d=\"M21.875 13.75c.295 2.229-4.25 5.64-6.123 6.889-2.296 1.53-2.158 3.324-3.827 3.062-.797-.723 1.082-2.325 0-2.297-.765 0 .143.943-.765 1.531-.766 0-3.065.766-3.062-3.061 0-1.531 4.592-9.185 4.592-9.185s1.444-1.456 1.531-2.68c-.556-.76-.383-1.53-.383-2.296.766-.765 2.297 1.914 2.297 1.914h1.53s.599-1.525 1.914-2.296c.766 0 .766 2.296.766 2.296\"\n        />\n        <path\n          strokeLinejoin=\"round\"\n          strokeWidth={1.14813}\n          d=\"M10.777 19.49a.383.383 0 1 1-.766 0 .383.383 0 1 1 .766 0zM14.936 12.028a.383 1.148 30 1 1-.663-.382.383 1.148 30 1 1 .663.382z\"\n        />\n        <path\n          fill=\"none\"\n          strokeWidth={0.76542}\n          d=\"M31.826 29.824c.765-15.308-4.21-21.049-9.185-21.814\"\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteArchbishop;\n","const SvgWhiteBishop = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"none\",\n        fillRule: \"evenodd\",\n        fillOpacity: 1,\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <g\n        style={{\n          fill: \"#fff\",\n          stroke: \"#000\",\n          strokeLinecap: \"butt\",\n        }}\n      >\n        <path d=\"M9 36c3.39-.97 10.11.43 13.5-2 3.39 2.43 10.11 1.03 13.5 2 0 0 1.65.54 3 2-.68.97-1.65.99-3 .5-3.39-.97-10.11.46-13.5-1-3.39 1.46-10.11.03-13.5 1-1.35.49-2.32.47-3-.5 1.35-1.46 3-2 3-2z\" />\n        <path d=\"M15 32c2.5 2.5 12.5 2.5 15 0 .5-1.5 0-2 0-2 0-2.5-2.5-4-2.5-4 5.5-1.5 6-11.5-5-15.5-11 4-10.5 14-5 15.5 0 0-2.5 1.5-2.5 4 0 0-.5.5 0 2z\" />\n        <path d=\"M25 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 1 1 5 0z\" />\n      </g>\n      <path\n        d=\"M17.5 26h10M15 30h15m-7.5-14.5v5M20 18h5\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteBishop;\n","const SvgWhiteChancellor = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      stroke=\"#000\"\n      style={{\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n        d=\"m34 34.82-3-3H14l-3 3\"\n      />\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n        d=\"M11 34.82v5h4v-2h5v2h5v-2h5v2h4v-5\"\n      />\n      <path\n        fill=\"#fff\"\n        fillRule=\"evenodd\"\n        strokeWidth={1.5}\n        d=\"M31.553 32.109v-2.115H13.448v2.115\"\n      />\n      <path fill=\"none\" strokeLinecap=\"round\" d=\"M11 34.82h23\" />\n      <g strokeLinecap=\"round\">\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          strokeWidth={1.14813}\n          d=\"M20.345 7.627c8.036.765 12.629 6.123 12.246 22.197H14.987c0-6.889 7.654-4.975 6.123-16.074\"\n        />\n        <path\n          fill=\"#fff\"\n          fillRule=\"evenodd\"\n          strokeLinejoin=\"round\"\n          strokeWidth={1.14813}\n          d=\"M21.875 13.75c.295 2.229-4.25 5.64-6.123 6.889-2.296 1.53-2.158 3.324-3.827 3.062-.797-.723 1.082-2.325 0-2.297-.765 0 .143.943-.765 1.531-.766 0-3.065.766-3.062-3.061 0-1.531 4.592-9.185 4.592-9.185s1.444-1.456 1.531-2.68c-.556-.76-.383-1.53-.383-2.296.766-.765 2.297 1.914 2.297 1.914h1.53s.599-1.525 1.914-2.296c.766 0 .766 2.296.766 2.296\"\n        />\n        <path\n          strokeLinejoin=\"round\"\n          strokeWidth={1.14813}\n          d=\"M10.777 19.49a.383.383 0 1 1-.766 0 .383.383 0 1 1 .766 0zM14.936 12.028a.383 1.148 30 1 1-.663-.382.383 1.148 30 1 1 .663.382z\"\n        />\n        <path\n          fill=\"none\"\n          strokeWidth={0.76542}\n          d=\"M31.826 29.824c.765-15.308-4.21-21.049-9.185-21.814\"\n        />\n      </g>\n      <path fill=\"none\" d=\"M30 30H15\" />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteChancellor;\n","const SvgWhiteKing = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        fill: \"none\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M22.5 11.63V6M20 8h5\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M22.5 25s4.5-7.5 3-10.5c0 0-1-2.5-3-2.5s-3 2.5-3 2.5c-1.5 3 3 10.5 3 10.5\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#000\",\n          strokeLinecap: \"butt\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path\n        d=\"M12.5 37c5.5 3.5 14.5 3.5 20 0v-7s9-4.5 6-10.5c-4-6.5-13.5-3.5-16 4V27v-3.5c-2.5-7.5-12-10.5-16-4-3 6 6 10.5 6 10.5v7\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M12.5 30c5.5-3 14.5-3 20 0M12.5 33.5c5.5-3 14.5-3 20 0M12.5 37c5.5-3 14.5-3 20 0\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteKing;\n","const SvgWhiteKnight = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"none\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M22 10c10.5 1 16.5 8 16 29H15c0-9 10-6.5 8-21\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M24 18c.38 2.91-5.55 7.37-8 9-3 2-2.82 4.34-5 4-1.042-.94 1.41-3.04 0-3-1 0 .19 1.23-1 2-1 0-4.003 1-4-4 0-2 6-12 6-12s1.89-1.9 2-3.5c-.73-.994-.5-2-.5-3 1-1 3 2.5 3 2.5h2s.78-1.992 2.5-3c1 0 1 3 1 3\"\n        style={{\n          fill: \"#fff\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M9.5 25.5a.5.5 0 1 1-1 0 .5.5 0 1 1 1 0z\"\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n        }}\n      />\n      <path\n        d=\"M15 15.5a.5 1.5 0 1 1-1 0 .5 1.5 0 1 1 1 0z\"\n        style={{\n          fill: \"#000\",\n          stroke: \"#000\",\n        }}\n        transform=\"rotate(30 14.5 15.5)\"\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteKnight;\n","const SvgWhitePawn = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <path\n      d=\"M22.5 9c-2.21 0-4 1.79-4 4 0 .89.29 1.71.78 2.38C17.33 16.5 16 18.59 16 21c0 2.03.94 3.84 2.41 5.03-3 1.06-7.41 5.55-7.41 13.47h23c0-7.92-4.41-12.41-7.41-13.47 1.47-1.19 2.41-3 2.41-5.03 0-2.41-1.33-4.5-3.28-5.62.49-.67.78-1.49.78-2.38 0-2.21-1.79-4-4-4z\"\n      style={{\n        opacity: 1,\n        fill: \"#fff\",\n        fillOpacity: 1,\n        fillRule: \"nonzero\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"miter\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    />\n  </svg>\n);\n\nexport default SvgWhitePawn;\n","const SvgWhiteQueen = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        fill: \"#fff\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinejoin: \"round\",\n        cursor: \"grab\",\n      }}\n    >\n      <path d=\"M9 26c8.5-1.5 21-1.5 27 0l2.5-12.5L31 25l-.3-14.1-5.2 13.6-3-14.5-3 14.5-5.2-13.6L14 25 6.5 13.5 9 26z\" />\n      <path d=\"M9 26c0 2 1.5 2 2.5 4 1 1.5 1 1 .5 3.5-1.5 1-1 2.5-1 2.5-1.5 1.5 0 2.5 0 2.5 6.5 1 16.5 1 23 0 0 0 1.5-1 0-2.5 0 0 .5-1.5-1-2.5-.5-2.5-.5-2 .5-3.5 1-2 2.5-2 2.5-4-8.5-1.5-18.5-1.5-27 0z\" />\n      <path\n        d=\"M11.5 30c3.5-1 18.5-1 22 0M12 33.5c6-1 15-1 21 0\"\n        style={{\n          fill: \"none\",\n        }}\n      />\n      <circle cx={6} cy={12} r={2} />\n      <circle cx={14} cy={9} r={2} />\n      <circle cx={22.5} cy={8} r={2} />\n      <circle cx={31} cy={9} r={2} />\n      <circle cx={39} cy={12} r={2} />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteQueen;\n","const SvgWhiteRook = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 45 45\" width=\"100%\" height=\"100%\" {...props}>\n    <g\n      style={{\n        opacity: 1,\n        fill: \"#fff\",\n        fillOpacity: 1,\n        fillRule: \"evenodd\",\n        stroke: \"#000\",\n        strokeWidth: 1.5,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeMiterlimit: 4,\n        strokeDasharray: \"none\",\n        strokeOpacity: 1,\n        cursor: \"grab\",\n      }}\n    >\n      <path\n        d=\"M9 39h27v-3H9v3zM12 36v-4h21v4H12zM11 14V9h4v2h5V9h5v2h5V9h4v5\"\n        style={{\n          strokeLinecap: \"butt\",\n        }}\n      />\n      <path d=\"m34 14-3 3H14l-3-3\" />\n      <path\n        d=\"M31 17v12.5H14V17\"\n        style={{\n          strokeLinecap: \"butt\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n      <path d=\"m31 29.5 1.5 2.5h-20l1.5-2.5\" />\n      <path\n        d=\"M11 14h23\"\n        style={{\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeLinejoin: \"miter\",\n        }}\n      />\n    </g>\n  </svg>\n);\n\nexport default SvgWhiteRook;\n","import SvgBlackArchbishop from './SvgBlackArchbishop';\nimport SvgBlackBishop from './SvgBlackBishop';\nimport SvgBlackChancellor from './SvgBlackChancellor';\nimport SvgBlackKing from './SvgBlackKing';\nimport SvgBlackKnight from './SvgBlackKnight';\nimport SvgBlackPawn from './SvgBlackPawn';\nimport SvgBlackQueen from './SvgBlackQueen';\nimport SvgBlackRook from './SvgBlackRook';\nimport SvgWhiteArchbishop from './SvgWhiteArchbishop';\nimport SvgWhiteBishop from './SvgWhiteBishop';\nimport SvgWhiteChancellor from './SvgWhiteChancellor';\nimport SvgWhiteKing from './SvgWhiteKing';\nimport SvgWhiteKnight from './SvgWhiteKnight';\nimport SvgWhitePawn from './SvgWhitePawn';\nimport SvgWhiteQueen from './SvgWhiteQueen';\nimport SvgWhiteRook from './SvgWhiteRook';\n\nexport const Svg = ({ piece }) => {\n  if (piece === ' a ') {\n    return (\n      <SvgBlackArchbishop />\n    );\n  } else if (piece === ' b ') {\n    return (\n      <SvgBlackBishop />\n    );\n  } else if (piece === ' c ') {\n    return (\n      <SvgBlackChancellor />\n    );\n  } else if (piece === ' k ') {\n    return (\n      <SvgBlackKing />\n    );\n  } else if (piece === ' n ') {\n    return (\n      <SvgBlackKnight />\n    );\n  } else if (piece === ' p ') {\n    return (\n      <SvgBlackPawn />\n    );\n  } else if (piece === ' q ') {\n    return (\n      <SvgBlackQueen />\n    );\n  } else if (piece === ' r ') {\n    return (\n      <SvgBlackRook />\n    );\n  } else if (piece === ' A ') {\n    return (\n      <SvgWhiteArchbishop />\n    );\n  } else if (piece === ' B ') {\n    return (\n      <SvgWhiteBishop />\n    );\n  } else if (piece === ' C ') {\n    return (\n      <SvgWhiteChancellor />\n    );\n  } else if (piece === ' K ') {\n    return (\n      <SvgWhiteKing />\n    );\n  } else if (piece === ' N ') {\n    return (\n      <SvgWhiteKnight />\n    );\n  } else if (piece === ' P ') {\n    return (\n      <SvgWhitePawn />\n    );\n  } else if (piece === ' Q ') {\n    return (\n      <SvgWhiteQueen />\n    );\n  } else if (piece === ' R ') {\n    return (\n      <SvgWhiteRook />\n    );\n  }\n\n  return null;\n}\n\nexport const color = (piece) => {\n  const wPieces = [' A ', ' B ', ' C ', ' K ', ' N ', ' P ', ' Q ', ' R '];\n\n  const bPieces = [' a ', ' b ', ' c ', ' k ', ' n ', ' p ', ' q ', ' r '];\n\n  if (wPieces.includes(piece)) {\n    return 'w';\n  } else if (bPieces.includes(piece)) {\n    return 'b';\n  }\n\n  return null;\n}\n","const maxWidth = {\n  '900': window.matchMedia(\"(max-width:900px)\")\n};\n\nconst styles = {\n  classicalSquares: {\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    display: \"grid\",\n    gridGap: \"0\",\n    gridTemplateColumns: maxWidth['900'].matches ? \"repeat(8, [col] 12vw)\" : \"repeat(8, [col] 5vw)\",\n    gridTemplateRows: maxWidth['900'].matches ? \"repeat(8, [col] 12vw)\" : \"repeat(8, [col] 5vw)\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    margin: \"0 auto\"\n  },\n  capablancaSquares: {\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    display: \"grid\",\n    gridGap: \"0\",\n    gridTemplateColumns: maxWidth['900'].matches ? \"repeat(10, [col] 9vw)\" : \"repeat(10, [col] 4vw)\",\n    gridTemplateRows: maxWidth['900'].matches ? \"repeat(8, [col] 9vw)\" : \"repeat(8, [col] 4vw)\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    margin: \"0 auto\"\n  },\n  userSelect: {\n    WebkitTouchCallout: \"none\",\n    WebkitUserSelect: \"none\",\n    KhtmlUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    userSelect: \"none\",\n  },\n  sq: {\n    position: \"relative\",\n    textAlign: \"center\",\n    cursor: \"default\"\n  },\n  w: {\n    backgroundColor: '#ffce9e',\n  },\n  b: {\n    backgroundColor: '#d18b47',\n  },\n  isLegal: {\n    boxShadow:\n      \"inset -4px 0 0 #ffdd43, inset 0 -4px 0 #ffdd43,\\n    inset 4px 0 0 #ffeb8e, inset 0 4px 0 #ffeb8e\",\n    cursor: \"pointer\"\n  },\n  isSelected: {\n    backgroundColor: \"#ffdd43 !important\",\n    opacity: 0.75,\n    boxShadow:\n      \"inset -4px 0 0 yellow, inset 0 -4px 0 yellow,\\n    inset 4px 0 0 yellow, inset 0 4px 0 yellow\"\n  },\n  isCheck: {\n    boxShadow:\n      \"inset -5px 0 0 #fdd57d, inset 0 -5px 0 #fdd57d,\\n    inset 5px 0 0 #fdd57d, inset 0 5px 0 #fdd57d\"\n  },\n  file: {\n    position: \"absolute\",\n    fontWeight: \"bold\",\n    fontSize: \"0.8rem\",\n    marginRight: \"0.15rem\",\n    marginBottom: \"0.15rem\",\n    bottom: \"0\",\n    right: \"0\"\n  },\n  rank: {\n    position: \"absolute\",\n    fontWeight: \"bold\",\n    fontSize: \"0.8rem\",\n    marginLeft: \"0.15rem\",\n    marginTop: \"0.15rem\",\n    top: \"0\",\n    left: \"0\"\n  },\n  light: {\n    color: '#d18b47',\n  },\n  dark: {\n    color: '#ffce9e',\n  },\n}\n\nexport default styles;\n","import styles from './styles';\n\nconst AlgebraicNotation = ({ props, payload }) => {\n  const spans = [];\n\n  if (payload.i === props.size.ranks - 1 && props.flip === 'w') {\n    const color = payload.sq.charAt(0).charCodeAt() % 2 !== 0 ? 'dark' : 'light';\n    spans.push(\n      <span\n        key={spans.length}\n        style={{...styles.file, ...styles[color]}}\n      >\n        {payload.sq.charAt(0)}\n      </span>\n    );\n  } else if (payload.i === 0 && props.flip === 'b') {\n    const color = payload.sq.charAt(0).charCodeAt() % 2 === 0 ? 'dark' : 'light';\n    spans.push(\n      <span\n        key={spans.length}\n        style={{...styles.file, ...styles[color]}}\n      >\n        {payload.sq.charAt(0)}\n      </span>\n    );\n  }\n\n  if (payload.j === 0 && props.flip === 'w') {\n    const color = payload.sq.charAt(1) % 2 !== 0 ? 'dark' : 'light';\n    spans.push(\n      <span\n        key={spans.length}\n        style={{...styles.rank, ...styles[color]}}\n      >\n        {payload.sq.charAt(1)}\n      </span>\n    );\n  } else if (payload.j === props.size.files - 1 && props.flip === 'b') {\n    const color = payload.sq.charAt(1) % 2 === 0 ? 'dark' : 'light';\n    spans.push(\n      <span\n        key={spans.length}\n        style={{...styles.rank, ...styles[color]}}\n      >\n        {payload.sq.charAt(1)}\n      </span>\n    );\n  }\n\n  return spans;\n}\n\nexport default AlgebraicNotation;\n","import { Ascii } from './common/Ascii';\nimport * as SvgPiece from './piece/SvgPiece';\nimport AlgebraicNotation from './AlgebraicNotation';\nimport styles from './styles';\n\nconst Squares = ({\n  className,\n  stateBoard,\n  goBack,\n  filterMove,\n  handleMove\n}) => {\n  const sqs = () => {\n    const fen = stateBoard.fen[stateBoard.fen.length - 1 + goBack].split(' ');\n    const ascii = Ascii.toAscii(fen[0]);\n    return Ascii.flip(\n      stateBoard.flip,\n      ascii\n    ).map((rank, i) => {\n      return rank.map((piece, j) => {\n        let payload = { piece: piece };\n        let isLegal, isSelected, isCheck = '';\n        let color = (i + j) % 2 !== 0 ? 'b' : 'w';\n        stateBoard.flip === 'w'\n          ? payload = {\n              ...payload,\n              i: i,\n              j: j,\n              sq: Ascii.fromIndexToAlgebraic(i, j, stateBoard.size)\n            }\n          : payload = {\n            ...payload,\n            i: stateBoard.size.ranks - 1 - i,\n            j: stateBoard.size.files - 1 - j,\n            sq: Ascii.fromIndexToAlgebraic(\n              stateBoard.size.ranks - 1 - i,\n              stateBoard.size.files - 1 - j,\n              stateBoard.size\n            )\n          };\n        if (stateBoard.pieceGrabbed) {\n          if (stateBoard.pieceGrabbed.sq === payload.sq) {\n            isSelected = 'isSelected';\n          }\n          if (stateBoard.pieceGrabbed.fen) {\n            if (Object.keys(stateBoard.pieceGrabbed.fen).includes(payload.sq)) {\n              isLegal = 'isLegal';\n            }\n          }\n        } else if (stateBoard.isCheck) {\n          if (fen[1] === 'w') {\n            if (piece === ' K ') {\n              isCheck = 'isCheck';\n            }\n          } else if (fen[1] === 'b') {\n            if (piece === ' k ') {\n              isCheck = 'isCheck';\n            }\n          }\n        }\n\n        return <div\n          key={payload.sq}\n          style={{\n            ...styles.sq,\n            ...styles[color],\n            ...styles[isLegal],\n            ...styles[isSelected],\n            ...styles[isCheck],\n          }}\n          className={[\n              'sq',\n              payload.sq,\n            ].join(' ')\n          }\n          onMouseDown={() => {\n            if (filterMove()) {\n              payload.piecePlaced = {\n                ascii: stateBoard?.pieceGrabbed?.ascii,\n              };\n              handleMove(payload);\n            }\n          }}\n          onMouseUp={(ev) => {\n            ev.preventDefault();\n            if (filterMove()) {\n              payload.piecePlaced = {\n                ascii: stateBoard?.pieceGrabbed?.ascii,\n              };\n              handleMove(payload);\n            }\n          }}\n          onDragOver={(ev) => {\n            ev.preventDefault();\n          }}>\n            <SvgPiece.Svg\n              piece={piece}\n            />\n            <AlgebraicNotation props={stateBoard} payload={payload} />\n        </div>\n      });\n    });\n  }\n\n  return (\n    <div\n      style={{\n        ...styles[className],\n        ...styles.userSelect,\n      }}\n    >\n      {sqs()}\n    </div>\n  );\n}\n\nexport default Squares;\n","import Squares from './Squares';\n\nconst CapablancaSquares = ({\n  stateBoard,\n  goBack,\n  filterMove,\n  handleMove\n}) => {\n  return (\n    <Squares\n      className=\"capablancaSquares\"\n      stateBoard={stateBoard}\n      goBack={goBack}\n      filterMove={filterMove}\n      handleMove={handleMove}\n    />\n  );\n}\n\nexport default CapablancaSquares;\n","import Squares from './Squares';\n\nconst ClassicalSquares = ({\n  stateBoard,\n  goBack,\n  filterMove,\n  handleMove\n}) => {\n  return (\n    <Squares\n      className=\"classicalSquares\"\n      stateBoard={stateBoard}\n      goBack={goBack}\n      filterMove={filterMove}\n      handleMove={handleMove}\n    />\n  );\n}\n\nexport default ClassicalSquares;\n","import CapablancaSquares from './CapablancaSquares';\nimport ClassicalSquares from './ClassicalSquares';\n\nexport const CapablancaBoard = ({\n  stateBoard,\n  goBack,\n  filterMove,\n  handleMove\n}) => {\n  return (\n    <CapablancaSquares\n      stateBoard={{\n        ...stateBoard,\n        ...{\n          size: {\n            files: 10,\n            ranks: 8,\n          }\n        }\n      }}\n      goBack={goBack}\n      filterMove={filterMove}\n      handleMove={handleMove}\n    />\n  );\n}\n\nexport const ClassicalBoard = ({\n  stateBoard,\n  goBack,\n  filterMove,\n  handleMove\n}) => {\n  return (\n    <ClassicalSquares\n      stateBoard={{\n        ...stateBoard,\n        ...{\n          size: {\n            files: 8,\n            ranks: 8,\n          }\n        }\n      }}\n      goBack={goBack}\n      filterMove={filterMove}\n      handleMove={handleMove}\n    />\n  );\n}\n\nexport * from './common/Ascii';\n\nexport * from './piece/SvgPiece';\n"],"names":["Ascii","_class","initialFen","toFen","ascii","string","forEach","rank","i","join","replace","slice","filtered","strSplit","split","n","item","flip","color","flipped","map","Array","length","nFiles","nRanks","file","j","k","l","toAscii","fen","arr","row","digits","concat","matchAll","index","parseInt","letters","sort","a","b","elem","fill","fromIndexToAlgebraic","size","String","fromCharCode","ranks","fromAlgebraicToIndex","sq","charAt","charCodeAt","asciiDiff","sqs","push","from","to","files","sqDiff","diff","Math","abs","xAxisSign","sign","yAxisSign","longAlgebraicNotation","sorted","find","SvgBlackArchbishop","props","_jsxs","_extends","xmlns","viewBox","width","height","children","_jsx","fillRule","stroke","strokeLinejoin","strokeWidth","d","strokeLinecap","style","cursor","SvgBlackBishop","opacity","fillOpacity","strokeMiterlimit","strokeDasharray","strokeOpacity","SvgBlackChancellor","SvgBlackKing","SvgBlackKnight","transform","SvgBlackPawn","SvgBlackQueen","cx","cy","r","SvgBlackRook","SvgWhiteArchbishop","SvgWhiteBishop","SvgWhiteChancellor","SvgWhiteKing","SvgWhiteKnight","SvgWhitePawn","SvgWhiteQueen","SvgWhiteRook","Svg","_ref","piece","wPieces","bPieces","includes","maxWidth","window","matchMedia","styles","classicalSquares","fontFamily","display","gridGap","gridTemplateColumns","matches","gridTemplateRows","justifyContent","alignContent","margin","capablancaSquares","userSelect","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","position","textAlign","w","backgroundColor","isLegal","boxShadow","isSelected","isCheck","fontWeight","fontSize","marginRight","marginBottom","bottom","right","marginLeft","marginTop","top","left","light","dark","AlgebraicNotation","payload","spans","Squares","className","stateBoard","goBack","filterMove","handleMove","pieceGrabbed","Object","keys","onMouseDown","_stateBoard$pieceGrab","piecePlaced","onMouseUp","ev","preventDefault","_stateBoard$pieceGrab2","onDragOver","SvgPiece","CapablancaSquares","ClassicalSquares","CapablancaBoard","ClassicalBoard","_ref2"],"mappings":"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"}